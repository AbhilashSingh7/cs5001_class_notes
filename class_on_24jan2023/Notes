WEEK 3

Strings

    Use input to get user input
        in_string = input("Please enter a string: ")
        print(f"Your string is \"{in_string}\"")
        print(f"Your string is {len(in_string)} characters long.")
        cap_in_string = in_string.upper()
        print(cap_in_string)

            len: finds the lenght of the string. In-built
            .upper: Changes to ALL CAPS
            .lower: Change to lower case

            It doesnt actually change the script, it just shows one version of it. Original remains the same

    Index

        Index starts with 0. Gives the letter in the string at that index. 

        print(in_string[0])
        print(in_string[1])
        print(in_string[2])
        print(in_string[3])
        print(in_string[4])
        print(in_string[5])

        print(in_string[len(in_string)-1]) = To get the last one
        short cut for the one above print(in_string[-1])
        print(in_string[2:8]) = Would print everything between 2nd and 7th(remember index is -1)
        print(in_string[-1::-1]) = will print it in reverse
        print(in_string[::]) = will print it out as it is

        print(f"The first instance of 'll' appears at position {in_string.find('ll')}") = Finds where ll is in the string
        print(f"The first instance of 'll' appears at position {in_string.rfind('ll')}") = rfind finds it from the right
        result is -1 if it doesnt find anything

     Name exercise:

        fullname = input("Input your full name:")

        name_break = fullname.rfind(' ')

        first_and_middle = fullname[:name_break]
l       ast = fullname[name_break+1:]


        print("Your name in last-name first format:")

        print(f"{last}, {first_and_middle}")

    Mutation

        phrase = "Change is inevitable"

        print("Original string:", phrase)
        print("Length of string", len(phrase))

        mutation1 = phrase + "except from vending machines"
        print(f"1: {mutation1}")

        mutation2 = mutation1.upper()
        print(f"2: {mutation2}")

        mutation3 = mutation2.replace(" ", "X")
        print(f"3: {mutation3}")

        print("Length of mutation3:", len(mutation3))

        mutation4 = mutation3 + "/n"
        print(f"4: {mutation4}")
        print("That was mutation4")

        print("Length of mutation4:", len(mutation4))

        print("Original string:", phrase)

        print(phrase[0])


IF

    Decision
    Boolean:
        It has to eventually be either true or false
        if (5+6 == 11):
            print("It is true")
        else:
            print("It is false")


        To get user input
            color = input("Input a color: ").lower()
            if (color == 'red'):
                print("Roses are this")
            elif (color == 'purple'):
                print("This haze is all in my brain")
            elif (color == 'yellow'):
                print("We all live in this submarine")
            elif (color == 'blue'):
                light_or_dark = input ("Is this light or dark blue?").lower()         [You can do this inside an if elif else]
                if (light_or_dark == 'light'):
                    print("Airy!")
                elif(light_or_dark == 'dark'):
                    print("Deep!")
                else:
                    print(well, its blue anyways!")
            elif (color == 'green').lower()
                print("Like the trees")
            else



python: It reads, evaluates, prints and then does it again [MIGHT BE ON AN EXAM]
            
    
    EQUALITY

        If the output is the same string_a == string_b are equal even if their contents are different. 
        To check if the content is the same use: string_a is string_b

        single = assigns value, double == means equal to. [ex: string_a = string_b]

        string_a = "Hello"    }
                              }   THEY ARE THE SAME because their content is the same
        string_b = "Hello"    }

        The easiest way to make another copy of a string is to join them [ex. h =''.join(f)
        
